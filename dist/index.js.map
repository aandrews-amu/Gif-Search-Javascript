{"version":3,"sources":["boxes.js","index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["rowCount","getGifs","limit","query","apiKey","apiUrl","gifs","fetch","then","response","json","buildRemoveButton","remButton","document","createElement","classList","add","id","innerText","type","dataset","remove","onclick","querySelector","buildCol","gifUrl","newCol","innerHTML","buildRow","childCount","gifType","newDiv","remRow","appendChild","data","forEach","gif","col","images","fixed_height","url","addRow","myParent","res","prepend","myAddButton","require","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","replace","exports","bundle","updateLink","link","newLink","cloneNode","onload","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","i","length","module"],"mappings":"AAAA,AEAA,ACAA,IDAI+C,ACAAW,MAAM,GDAG,ACAAZ,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;AHEA;AAEA,ACJA,ACCA,ACCA,IHEI9C,KEHKgD,ACCAW,GHEG,GAAG,CAAf,EAEA,CGJA,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AFM9B,AELE,ACCA,MDDI,ACCAC,CDDCd,MCCM,GDDX,ACCca,EDDE,ECCE,CAACE,SAAL,EAAd;AHKF,ACPAhB,ACEIC,IAAAA,GDFG,CAAC,KCEK,GAAGE,IDFT,CAAP,OCE4B,EAAxB;AFOJ,AENG,ACADY,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AHO/B,AGNIH,IAAAA,IAAI,CAACvC,MAAL;AHQJ,AEPE,ACAC,GAFD,MDEO0B,SAAP;AFQF,AEPC;AFSD,AGTEc,EAAAA,OAAO,CAACG,IAAR,GAAeJ,IAAI,CAACI,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,IAAI,CAACC,GAAL,EAA/C;AHWF,AETA,ACDEP,EAAAA,IAAI,CAACQ,EDCEnB,QCDP,CAAgBoB,GDClB,GAAwB,MCDtB,CAA6BR,OAA7B,EAAsCD,IAAI,CAACU,WAA3C;AHWF,AETE,ACDD;AHWD,AETE,MAAI;AFUN,AETI,ACDJ,IAAIC,MDCM,IAAIrB,ACDA,GAAG,EDCP,EAAN,ACDJ;AHWA,AETG,GAFD,CAEE,OAAOC,GAAP,EAAY;AFUhB,AETI,ACFJ,QDEQC,CCFCoB,MDEM,GAAG,ACFlB,CDEmB,ECFE,GDEGrB,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;AFUJ,AGXE,MAAIiB,UAAJ,EAAgB;AHYlB,AEVI,ACDA,QDCInB,OAAJ,EAAa;AFWjB,AEVM,ACDH,aDCUG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AFYN,AEXK;AFYL,AEXG,ACDDmB,EAAAA,UAAU,GAAGE,UAAU,CAAC,YAAY;AAClC,QAAIC,KAAK,GAAG7D,QAAQ,CAAC8D,gBAAT,CAA0B,wBAA1B,CAAZ;AHYJ,AEVE,SFUO1E,AEVA,GAAP,IFUF,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;AAC7B,AEVD,ACFG,QHYIC,CGZC,IAAIwE,CHYC,AGZA,GHYG,AGZA,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC,QHYzC;AACA,AGZI,QHYEvE,EGZEqD,IHYI,EGZE,CHYE,AGZDH,UAAP,CAAkBmB,KAAK,CAACE,CAAD,CAAL,CAASZ,IAA3B,MAAqCN,MAAM,CAACT,KHYK9C,KAAM,EGZlB,EAAzC,EAAgE,MHYMC,MAAO,UAASF,KAAM,WAAUF,QAAQ,GAAGE,KAAM,EAA3H;AAEA,AEXF,ACFQyD,QHaArD,AGbAqD,CDECJ,GFWG,GAAGhD,GGbG,CDElB,ACFmBmE,CHaC,AEXAlC,CFWCnC,EEXrB,CCFwB,CDEC,ACFAuE,CAAD,CHaJ,AGbF,CHaH,AGbP,CHcLpE,IADY,CACPC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADL,CAAb;AAGA,AEbA,ACFK,SHeEJ,AEbA,CAAC,GFaR,EEbakC,GAAN,EAAWgB,OAAX,CAAmB,sEAAnB,EAA2F,IAA3F,IAAmG,GAA1G;AFcD,AEbA,ACFI,EHiBL;AACA;AACE,AEfFC,ACFIc,IAAAA,GDEG,CAACtB,MCFM,GAAG,GDEjB,CCFI,EDEmBD,kBAAvB;AFgBE,AEfFS,ACFG,GATsB,EASpB,EDEE,ACXkB,CDWjBF,ACXN,UDWF,GAAqBA,UAArB;AFgBE,AGjBD;AHkBC;AAEA,AGlBFuB,MAAM,CAACrB,OAAP,GAAiBe,SAAjB;AHmBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAS7D,iBAAT,GAA6B;AAC3B,QAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAlB;AACAF,EAAAA,SAAS,CAACG,SAAV,CAAoBC,GAApB,CAAwB,uBAAxB,EAAiD,KAAjD;AACAJ,EAAAA,SAAS,CAACK,EAAV,GAAe,eAAf;AACAL,EAAAA,SAAS,CAACM,SAAV,GAAsB,GAAtB;AACAN,EAAAA,SAAS,CAACO,IAAV,GAAiB,QAAjB;AACAP,EAAAA,SAAS,CAACQ,OAAV,CAAkBC,MAAlB,GAA2BrB,QAA3B;;AAEAY,EAAAA,SAAS,CAACU,OAAV,GAAoB,YAAY;AAC9B;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAT,IAAAA,QAAQ,CAACU,aAAT,CAAwB,iBAAgB,KAAKH,OAAL,CAAaC,MAAO,IAA5D,EAAiEA,MAAjE;AACD,GAXD;;AAaA,SAAOT,SAAP;AACD;;AAED,SAASY,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,QAAMC,MAAM,GAAGb,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACAY,EAAAA,MAAM,CAACX,SAAP,CAAiBC,GAAjB,CAAqB,YAArB,EAFwB,CAIxB;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEAU,EAAAA,MAAM,CAACC,SAAP,GAAoB;sDACgCF,MAAO;GAD3D;AAIA,SAAOC,MAAP;AACD;;AAED,eAAeE,QAAf,CAAwBC,UAAxB,EAAoCC,OAApC,EAA6C;AAC3C9B,EAAAA,QAAQ;AAER,QAAM+B,MAAM,GAAGlB,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACAiB,EAAAA,MAAM,CAAChB,SAAP,CAAiBC,GAAjB,CAAqB,OAArB;AACAe,EAAAA,MAAM,CAACX,OAAP,CAAeC,MAAf,GAAwBrB,QAAxB;AAEA,QAAMgC,MAAM,GAAGnB,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACAkB,EAAAA,MAAM,CAACjB,SAAP,CAAiBC,GAAjB,CAAqB,eAArB,EAAsC,YAAtC;AAEA,QAAMJ,SAAS,GAAGD,iBAAiB,EAAnC;AACAqB,EAAAA,MAAM,CAACC,WAAP,CAAmBrB,SAAnB;AAEAmB,EAAAA,MAAM,CAACE,WAAP,CAAmBD,MAAnB,EAb2C,CAe3C;AACA;;AACA,QAAM1B,IAAI,GAAG,MAAML,OAAO,CAAC4B,UAAD,EAAaC,OAAb,CAA1B;AAEAxB,EAAAA,IAAI,CAAC4B,IAAL,CAAUC,OAAV,CAAkB,UAASC,GAAT,EAAc;AAC9B,UAAMC,GAAG,GAAGb,QAAQ,CAACY,GAAG,CAACE,MAAJ,CAAWC,YAAX,CAAwBC,GAAzB,CAApB;AACAT,IAAAA,MAAM,CAACE,WAAP,CAAmBI,GAAnB;AACD,GAHD;AAKA,SAAON,MAAP;AACD,EAED;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,SAASU,MAAT,GAAkB;AAChB,QAAMC,QAAQ,GAAG7B,QAAQ,CAACU,aAAT,CAAuB,UAAvB,CAAjB;AACAK,EAAAA,QAAQ,CAAC,CAAD,EAAI,cAAJ,CAAR,CAA4BpB,IAA5B,CAAiC,UAASmC,GAAT,EAAc;AAC7CD,IAAAA,QAAQ,CAACE,OAAT,CAAiBD,GAAjB;AACD,GAFD;AAGD,EAED;;;AACA,MAAME,WAAW,GAAGhC,QAAQ,CAACU,aAAT,CAAuB,aAAvB,CAApB;;AACAsB,WAAW,CAACvB,OAAZ,GAAsB,YAAY;AAChCmB,EAAAA,MAAM;AACP,CAFD","file":"index.js","sourceRoot":"..","sourcesContent":["// No longer needed colCount after refactoring\n\n// const colCount = 4;\n\nlet rowCount = 0;\n\n// Moved these vars to getGifs, since the rest of the script does\n// not need to use these vars, prob best to keep them scoped\n// to the function that does.\n\n// const q = \"harry+potter\";\n// const api_key = \"7Erj1LUTR77H1QvQeKYB8aAXambSNMyp\";\n\n// See below, we can eliminate offset by\n// calculating it based on rowCount in getGifs\n\n// let offset = 0;\n\n// GET GIFS\n// function getGifPromise(gifType) {\n//   var apiURL = `http://api.giphy.com/v1/gifs/search?q=${gifType}&api_key=${api_key}&limit=${colCount}&offset=${offset}`;\n//   return fetch(apiURL).then(response => {\n//     return response.json();\n//   }).then(json => {\n//     return json.data;\n//   })\n// }\n\n// Refactored this slightly to accept 'query' and 'limit'\n// as a parameters to make it a little more flexible. \nfunction getGifs(limit, query) {\n  const apiKey = '7Erj1LUTR77H1QvQeKYB8aAXambSNMyp';\n  const apiUrl = `https://api.giphy.com/v1/gifs/search?q=${query}&api_key=${apiKey}&limit=${limit}&offset=${rowCount * limit}`;\n\n  const gifs = fetch(apiUrl)\n  .then(response => response.json());\n\n  return gifs;\n}\n\n// BUILD ROW\n// function buildRow(childCount, gifType) {\n  // rowCount++; \n  // const newDiv = document.createElement(\"div\");\n  // newDiv.classList.add(\"boxes\");\n  // newDiv.dataset.remove = rowCount;\n\n  // remove button and row div\n  // const remButton = document.createElement(\"button\");\n  // const remRow = document.createElement(\"div\");\n  // remRow.classList.add(\"boxes__remove\", \"text-right\");\n  // remButton.classList.add(\"btn-outline-secondary\", \"btn\");\n  // remButton.id = \"js-remove-row\";\n  // remButton.innerText = \"x\"; \n  // remButton.type = \"button\";\n  // remButton.dataset.remove = rowCount;\n  // newDiv.insertAdjacentElement(\"afterbegin\", remRow);\n  // remRow.appendChild(remButton);\n\n  // EVENT LISTENER FOR REMOVE BUTTON\n  // remButton.onclick = function () {\n  //   const toRemove = this.dataset.remove;\n  //   const removeList = document.querySelectorAll(`[data-remove=\"${toRemove}\"]`);\n  //   removeList.forEach(function(elt) {\n  //     elt.remove();\n  //   })\n  // };\n\n  \n//   for (let i=0; i < childCount; i++) {\n//     const newCol = document.createElement(\"div\"); \n//     newCol.classList.add(\"boxes__box\"); \n//     const newSq = document.createElement(\"div\");\n//     newSq.classList.add(\"square\");\n//     newCol.appendChild(newSq);\n//     newDiv.appendChild(newCol);\n\n//     getGifPromise(q).then(data => {\n//       const myGif = data[i].images.fixed_height.url;\n//       const newGif = document.createElement(\"img\");\n//       newGif.classList.add(\"img-fluid\");\n//       newGif.src = myGif; \n//       newSq.appendChild(newGif);\n//     })\n//     offset += colCount;\n//   }\n//   return newDiv; \n// }\n\nfunction buildRemoveButton() {\n  const remButton = document.createElement(\"button\");\n  remButton.classList.add(\"btn-outline-secondary\", \"btn\");\n  remButton.id = \"js-remove-row\";\n  remButton.innerText = \"x\"; \n  remButton.type = \"button\";\n  remButton.dataset.remove = rowCount;\n\n  remButton.onclick = function () {\n    // Cleaned this up a little to make it a one-liner\n\n    // const toRemove = this.dataset.remove;\n    // const removeList = document.querySelector(`[data-remove=\"${toRemove}\"]`);\n    // removeList.remove();\n    // removeList.forEach(function(elt) {\n    //   elt.remove();\n    // })\n\n    document.querySelector(`[data-remove=\"${this.dataset.remove}\"]`).remove();\n  };\n\n  return remButton;\n}\n\nfunction buildCol(gifUrl) {\n  const newCol = document.createElement(\"div\"); \n  newCol.classList.add(\"boxes__box\");\n\n  // Refactored this to show you another way\n  // of building elements like this. Sometimes\n  // when I'm building a complex element with a lot\n  // of children, I like to go this route to save\n  // all of the foo.bar()\n\n  // const newSq = document.createElement(\"div\");\n  // newSq.classList.add(\"square\");\n\n  // const newGif = document.createElement(\"img\");\n  // newGif.classList.add(\"img-fluid\");\n  // newGif.src = gifUrl;\n\n  // newSq.appendChild(newGif);\n  // newCol.appendChild(newSq);\n\n  newCol.innerHTML = `\n    <div class=\"square\"><img class=\"img-fluid\" src=\"${gifUrl}\" /></div>\n  `;\n\n  return newCol;\n}\n\nasync function buildRow(childCount, gifType) {\n  rowCount++;\n\n  const newDiv = document.createElement(\"div\");\n  newDiv.classList.add(\"boxes\");\n  newDiv.dataset.remove = rowCount;\n\n  const remRow = document.createElement(\"div\");\n  remRow.classList.add(\"boxes__remove\", \"text-right\");\n\n  const remButton = buildRemoveButton();\n  remRow.appendChild(remButton);\n\n  newDiv.appendChild(remRow);\n\n  // Using await here b/c we want to make sure\n  // the api call has completed before continuing\n  const gifs = await getGifs(childCount, gifType);\n\n  gifs.data.forEach(function(gif) {\n    const col = buildCol(gif.images.fixed_height.url);\n    newDiv.appendChild(col);\n  });\n\n  return newDiv;\n}\n\n// ADD ROW\n// function addRow() {\n//   const myParent = document.querySelector(\"#content\");\n//   const myRow = buildRow(colCount, \"harry+potter\"); \n//   myParent.insertAdjacentElement(\"afterbegin\", myRow);\n// }\n\n// Refactored this to work with new buildRow().\n\n// Please have another look at async functions,\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n// but in a nut shell, buildRow() returns a promise\n// once the promise is resolved, we can access the\n// function's return value in res.\n\n// Also, please notice the use of prepend(),\n// this is just the opposite of appendChild(),\n// so we can keep our rows above the add button.\nfunction addRow() {\n  const myParent = document.querySelector(\"#content\");\n  buildRow(4, 'harry+potter').then(function(res) {\n    myParent.prepend(res);\n  });\n}\n\n// EVENT LISTENER FOR ADD ROW\nconst myAddButton = document.querySelector(\"#js-add-row\");\nmyAddButton.onclick = function () {\n  addRow();\n}","import \"./style.scss\";\nrequire('./boxes.js'); ","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}