.container {
  max-width: 1200px;
  margin: 50px auto;
  /* height: 100%;
  No need to set height here, the div will grow
  automatically to accommodate its children. Height
  on a container like this is usually just if you want
  to add whitespace. IE: If you had a site footer and
  wanted to make sure it was always stuck to the bottom
  of the screen.*/
}

.row {
  display: flex;
}

.column {
  flex: 0 0 25%;
}

.purple,
.white {
  margin: 30px;
  height: 250px;
  box-sizing: border-box;
}

.purple {
  background-color: #4e008e;
}

.white {
  border: 2px solid #4e008e;
}

@media screen and (max-width: 768px) {
  .row {
    flex-wrap: wrap;
  }
  /* Moved this up to keep all of the .row rules together */
  .row--even {
    flex-direction: row-reverse;
  }
  .column {
    flex: 0 0 50%;
  }
  .column:nth-child(3) {
    order: 1;
  }
  /* I did some research on this to refresh myself, and
  nth-child selectors do have 1-based indices.

  https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child

  Flex order is a crazy animal, I will leave it to the pros to explain,
  but consider this, and have a look at how I changed the order value.

  "Flex items have a default order value of 0, therefore items with an
  integer value greater than 0 will be displayed after any items that
  have not been given an explicit order value."

  https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Ordering_Flex_Items */
}
